name: Format, Test & Coverage

on:
  pull_request:
    branches: [main]
    paths: [run.py, db/**, app/**, tests/**]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.10"

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          ref: ${{ github.head_ref }}

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies and run ruff
        run: |
          make install
          sleep 1
          make format

      - name: Commit and push changes
        run: | 
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git commit -m "ci: auto-format code with Ruff"
            git push origin HEAD:${{ github.head_ref }}
          fi
  test:
    runs-on: ubuntu-latest
    needs: format

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: make install

      - name: Run tests + coverage
        run: |
          echo "Running pytest with coverage for PostgreSQL..."
          pytest --cov=app --cov-report=html --cov-report=term-missing --maxfail=1 -v | tee coverage_output.txt
          echo "Coverage command completed with exit code: $?"

      - name: Upload coverage artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: coverage-postgres
          path: coverage_output.txt

  coverage-report:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Download Postgres coverage
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          name: coverage-postgres
          path: ./coverage-postgres.txt

      - name: Post PR comments
        if: github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ github.token }}
          COVERAGE_THRESHOLD: 80
        run: |
          COVERAGE_LINE=$(grep -E "TOTAL.*[0-9]+%" coverage-postgres.txt || true)
          if [ -z "$COVERAGE_LINE" ]; then
            echo "No coverage data for PostgreSQL."
            exit 1
          fi
          COVERAGE_PERCENTAGE=$(echo "$COVERAGE_LINE" | awk '{print substr($NF, 1, length($NF)-1)}')
          STATUS="ðŸ”´ Fail"
          if (( $(echo "$COVERAGE_PERCENTAGE >= $COVERAGE_THRESHOLD" | bc -l) )); then
            STATUS="ðŸŸ¢ Pass"
          fi
          
          # Create comment body with proper escaping
          COMMENT_BODY="### Code Coverage Summary for PostgreSQL\n\n| Database | Metric | Value | Status |\n|---|---|---|---|\n| PostgreSQL | Overall Coverage | ${COVERAGE_PERCENTAGE}% | ${STATUS} |\n\n_Threshold: ${COVERAGE_THRESHOLD}%_"
          
          gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT_BODY" --edit-last --create-if-none
